/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package bluewhale;

import java.sql.SQLException;
import javax.swing.JOptionPane;
import java.util.Calendar;
import com.toedter.calendar.JCalendar;
import javax.swing.table.DefaultTableModel;
import java.sql.Statement;

/**
 *
 * @author Kavindi
 */
public class CheckOut extends javax.swing.JFrame {

    /**
     * Creates new form CheckOut
     */
    public CheckOut() {
        initComponents();
        this.setLocationRelativeTo(null);
        txtSearchNIC.requestFocus();
    }
    //to check the user pay the fullAmount before checkout
    private boolean paymentCompleted = false;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnClose = new javax.swing.JButton();
        checkOutDateChooser = new com.toedter.calendar.JDateChooser();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        btnPay = new javax.swing.JButton();
        txtInDate = new javax.swing.JTextField();
        txtNoDays = new javax.swing.JTextField();
        txtAmount = new javax.swing.JTextField();
        txtCheckOut = new javax.swing.JButton();
        txtPhoneNo = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblOut = new javax.swing.JTable();
        btnBack = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        txtSearchNIC = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        txtRoomNo = new javax.swing.JTextField();
        btnEnter = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnClose.setIcon(new javax.swing.ImageIcon(getClass().getResource("/bluewhale/close.jpg"))); // NOI18N
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });
        getContentPane().add(btnClose, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 0, 18, 19));

        checkOutDateChooser.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        getContentPane().add(checkOutDateChooser, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 170, 110, 30));

        jLabel1.setFont(new java.awt.Font("Felix Titling", 1, 24)); // NOI18N
        jLabel1.setText("CheckOut");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(324, 6, -1, -1));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setText("Name");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, -1, -1));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setText("Email Address");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 130, -1, 30));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setText("Phone Number");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 180, 106, -1));

        txtName.setEditable(false);
        txtName.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        getContentPane().add(txtName, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 90, 160, -1));

        txtEmail.setEditable(false);
        txtEmail.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        getContentPane().add(txtEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 130, 160, 30));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setText("Check In Date");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 130, -1, 30));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel6.setText("Check Out Date");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 170, -1, 40));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel7.setText("No of Days Stay");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 90, -1, -1));

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel8.setText("Full Amount");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 130, -1, -1));

        btnPay.setBackground(new java.awt.Color(0, 0, 204));
        btnPay.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnPay.setForeground(new java.awt.Color(255, 255, 255));
        btnPay.setText("Proceed To Pay");
        btnPay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPayActionPerformed(evt);
            }
        });
        getContentPane().add(btnPay, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 180, -1, -1));

        txtInDate.setEditable(false);
        txtInDate.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        getContentPane().add(txtInDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 130, 110, -1));

        txtNoDays.setEditable(false);
        txtNoDays.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        getContentPane().add(txtNoDays, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 90, 130, -1));

        txtAmount.setEditable(false);
        txtAmount.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        txtAmount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAmountActionPerformed(evt);
            }
        });
        getContentPane().add(txtAmount, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 130, 132, -1));

        txtCheckOut.setBackground(new java.awt.Color(0, 0, 204));
        txtCheckOut.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        txtCheckOut.setForeground(new java.awt.Color(255, 255, 255));
        txtCheckOut.setText("Check Out");
        txtCheckOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCheckOutActionPerformed(evt);
            }
        });
        getContentPane().add(txtCheckOut, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 180, -1, -1));

        txtPhoneNo.setEditable(false);
        txtPhoneNo.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        getContentPane().add(txtPhoneNo, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 180, 160, -1));

        tblOut.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tblOut.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Name", "Email Address", "Phone Number", "Check In Date", "Check Out Date", "No of Days Stay", "Full Amount"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblOut);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 210, 850, -1));

        btnBack.setBackground(new java.awt.Color(0, 0, 204));
        btnBack.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnBack.setForeground(new java.awt.Color(255, 255, 255));
        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        getContentPane().add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 0, 84, -1));

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel10.setText("Search by NIC");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 50, 120, 30));

        txtSearchNIC.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        getContentPane().add(txtSearchNIC, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 50, 270, -1));

        btnSearch.setBackground(new java.awt.Color(0, 0, 204));
        btnSearch.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnSearch.setForeground(new java.awt.Color(255, 255, 255));
        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });
        getContentPane().add(btnSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 50, -1, -1));

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel11.setText("Room No");
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 90, -1, 30));

        txtRoomNo.setEditable(false);
        txtRoomNo.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        getContentPane().add(txtRoomNo, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 90, 110, -1));

        btnEnter.setBackground(new java.awt.Color(0, 0, 204));
        btnEnter.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnEnter.setForeground(new java.awt.Color(255, 255, 255));
        btnEnter.setText("Enter");
        btnEnter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEnterActionPerformed(evt);
            }
        });
        getContentPane().add(btnEnter, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 170, -1, 30));

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/bluewhale/bghotel.jpg"))); // NOI18N
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(-330, -30, 1200, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        setVisible(false);
        new Menu().setVisible(true);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnPayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPayActionPerformed
        // Assuming these are your components
        Calendar selectedCheckOutDate = checkOutDateChooser.getCalendar();
        int checkOutDay = selectedCheckOutDate.get(Calendar.DAY_OF_MONTH);
        int checkOutMonth = selectedCheckOutDate.get(Calendar.MONTH) + 1; // Months are 0-based
        int checkOutYear = selectedCheckOutDate.get(Calendar.YEAR);
        String checkOutDateForDB = String.format("%02d/%02d/%d", checkOutDay, checkOutMonth, checkOutYear);

        String checkOutDate = checkOutDateForDB;
        String noDay = txtNoDays.getText();
        String fullAmount = txtAmount.getText();
        
        if (!checkOutDate.isEmpty()) {
            String SQL1 = "UPDATE checkIn SET checkOutDate = ?, fullAmount = ?, noOfDay = ? WHERE id = ?";
      
            try {
                // Load the database driver
                Class.forName("com.mysql.cj.jdbc.Driver");
                // Get the database connection
                java.sql.Connection connection = java.sql.DriverManager.getConnection("jdbc:mysql://localhost:3306/HotelManagementSystem", "root", "1234");

                Statement statement = connection.createStatement();

                int rowsAffected = statement.executeUpdate(SQL1);

                if (rowsAffected > 0) {
                    //private boolean paymentCompleted = false;
                    paymentCompleted = true;
                    JOptionPane.showMessageDialog(this, "Information updated successfully!");
                } else {
                    JOptionPane.showMessageDialog(this, "No record found with the given ID!", "Error", JOptionPane.ERROR_MESSAGE);
                }
                
                DefaultTableModel model = (DefaultTableModel) tblOut.getModel();
                model.setRowCount(0);
                String SQL = "SELECT * FROM checkIn";
                
                try {
                Class.forName("com.mysql.cj.jdbc.Driver");
                //java.sql.Connection connection = java.sql.DriverManager.getConnection("jdbc:mysql://localhost/HotelManagementSystem", "root", "1234");
                java.sql.Statement stm = connection.createStatement();
                java.sql.ResultSet rs = stm.executeQuery(SQL);

                while (rs.next()) {
                    String name = rs.getString("name");
                    String email = rs.getString("email");
                    String phoneNo = rs.getString("phoneNo");
                    String checkIn = rs.getString("checkInDate");
                    String checkOut = rs.getString("checkOutDate");
                    int noDays = rs.getInt("noOfDay");
                    double fullAmounts = rs.getDouble("fullAmount");

                    model.addRow(new Object[]{name,email, phoneNo, checkIn, checkOut, noDays, fullAmounts});
                }
                }catch (ClassNotFoundException ex) {
                System.out.println("Driver not found");
                } catch (SQLException ex) {
                    System.out.println("SQL Error: " + ex.getMessage());
                }
                connection.close();
                
            } catch (ClassNotFoundException ex) {
                System.out.println("Driver not found");
            } catch (SQLException ex) {
                System.out.println("SQL Error: " + ex.getMessage());
            }
        } else {
            JOptionPane.showMessageDialog(this, "Please fill your check-out date!", "Error", JOptionPane.ERROR_MESSAGE);
        }
       
    }//GEN-LAST:event_btnPayActionPerformed

    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
       System.exit(0);
    }//GEN-LAST:event_btnCloseActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
    String searchNIC = txtSearchNIC.getText();
       //check email field is empty
        if (searchNIC.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please enter your NIC!", "ERROR", JOptionPane.ERROR_MESSAGE);
            return;
        }
       
        String userSQL = "SELECT * FROM User WHERE id = ?";
        String checkInSQL = "SELECT * FROM checkIn WHERE id = ?";

        try {
            // Load the database driver
            Class.forName("com.mysql.cj.jdbc.Driver");

            // Get the database connection
            try (java.sql.Connection connection = java.sql.DriverManager.getConnection("jdbc:mysql://localhost/HotelManagementSystem", "root", "1234")) {

                // set values from user table in database
                try (java.sql.PreparedStatement userPst = connection.prepareStatement(userSQL)) {
                    userPst.setString(1, searchNIC);
                    try (java.sql.ResultSet userRs = userPst.executeQuery()) {
                        if (userRs.next()) {
                            txtName.setText(userRs.getString("name"));
                            txtEmail.setText(userRs.getString("email"));
                            txtPhoneNo.setText(userRs.getString("phoneNo"));
                        } else {
                            JOptionPane.showMessageDialog(this, "NIC not found in User table.", "ERROR", JOptionPane.ERROR_MESSAGE);
                            return;
                        }
                    }
                }

                // set values from checkIn table in database
                try (java.sql.PreparedStatement checkInPst = connection.prepareStatement(checkInSQL)) {
                    checkInPst.setString(1, searchNIC);
                    try (java.sql.ResultSet checkInRs = checkInPst.executeQuery()) {
                        if (checkInRs.next()) {
                            txtInDate.setText(checkInRs.getString("checkInDate"));
                            txtRoomNo.setText(checkInRs.getString("roomNo"));
                        } else {
                            txtRoomNo.setText("No room selected");
                            txtInDate.setText("No check-in data");
                        }
                    }
                }
            //exception handling
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, "Database Error: " + ex.getMessage(), "ERROR", JOptionPane.ERROR_MESSAGE);
            }
        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(this, "Driver Not Found", "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnSearchActionPerformed

    private void txtCheckOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCheckOutActionPerformed
        // TODO add your handling code here:
        if (!paymentCompleted) {
            JOptionPane.showMessageDialog(this, "Please make your payment first!", "ERROR", JOptionPane.ERROR_MESSAGE);
        } else {
            String SQL = "UPDATE Room SET  availability = '" + "Available"  + "' WHERE roomNo = '" + txtRoomNo.getText() + "'";
            
        // Execute the query
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            java.sql.Connection connection = java.sql.DriverManager.getConnection("jdbc:mysql://localhost:3306/HotelManagementSystem", "root", "1234");
            java.sql.Statement stm = connection.createStatement();
            
            int rowsUpdated = stm.executeUpdate(SQL);
            
            if (rowsUpdated > 0) {
                javax.swing.JOptionPane.showMessageDialog(this, "Table updated successfully!");
            } else {
                javax.swing.JOptionPane.showMessageDialog(this, "Unsuccessfully...Room Not Found!","Error",JOptionPane.ERROR_MESSAGE);
            }
            
            //exception handling   
        } catch (ClassNotFoundException ex) {
            System.out.println("Driver Not Found");
        } catch (SQLException ex) {
            System.out.println(ex.getMessage());
        }
           int value = JOptionPane.showConfirmDialog(this, "Do you want to see the bill ?");
            switch (value) {
                case JOptionPane.YES_OPTION -> {
                    setVisible(false);
                    new Bill().setVisible(true);
                }
                case JOptionPane.NO_OPTION -> {
                    setVisible(false);
                    new Menu().setVisible(true);
                }
                default -> setVisible(true);
            }
        }
        
    }//GEN-LAST:event_txtCheckOutActionPerformed

    private void txtAmountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAmountActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAmountActionPerformed

    private void btnEnterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEnterActionPerformed
        Calendar selectedCheckOutDate = checkOutDateChooser.getCalendar();
        int checkOutDay = selectedCheckOutDate.get(Calendar.DAY_OF_MONTH);
        int checkOutMonth = selectedCheckOutDate.get(Calendar.MONTH) +1; // Months are 0-based
        int checkOutYear = selectedCheckOutDate.get(Calendar.YEAR);
        String checkOutDateForDB = String.format("%02d/%02d/%d", checkOutDay, checkOutMonth, checkOutYear);
        DataManager.setCheckOutDateData(checkOutDay);
                
        int numberOfStayDays = (DataManager.getCheckOutDateData() - DataManager.getCheckInDateData());
        //for database, stay days - stayDaysString
        String stayDaysString = String.valueOf(numberOfStayDays);
        txtNoDays.setText(stayDaysString);
        String checkOutDate = checkOutDateForDB;
        
        if (!checkOutDate.isEmpty()){
        
         String SQL = "SELECT * FROM Room WHERE roomNo = '" + txtRoomNo.getText() + "'";
            try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            java.sql.Connection connection = java.sql.DriverManager.getConnection("jdbc:mysql://localhost/HotelManagementSystem", "root", "1234");
            java.sql.Statement stm = connection.createStatement();
                // Execute the query
                try (java.sql.ResultSet rs = stm.executeQuery(SQL)) {
                    if (rs.next()) {
                        System.out.println("Hello!");
                        double priceDay = rs.getDouble("priceDay");
                        double totalAmount = (numberOfStayDays * priceDay);
                        String theTotalAmount = String.valueOf(totalAmount);
                        txtAmount.setText(theTotalAmount);
                    } else {
                        JOptionPane.showMessageDialog(this, "Room number not found.","ERROR",JOptionPane.ERROR_MESSAGE);
                    }
                }
                
                    //exception handling
                    } catch (ClassNotFoundException ex) {
                        System.out.println("Driver Not Found");
                    } catch (SQLException ex) {
                        System.out.println(ex.getMessage());
                    }
        } else {
                    javax.swing.JOptionPane.showMessageDialog(this, "Please fill your check out date!", "Error", JOptionPane.ERROR_MESSAGE);
                }
    }//GEN-LAST:event_btnEnterActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CheckOut.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CheckOut.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CheckOut.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CheckOut.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new CheckOut().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnClose;
    private javax.swing.JButton btnEnter;
    private javax.swing.JButton btnPay;
    private javax.swing.JButton btnSearch;
    private com.toedter.calendar.JDateChooser checkOutDateChooser;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblOut;
    private javax.swing.JTextField txtAmount;
    private javax.swing.JButton txtCheckOut;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtInDate;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtNoDays;
    private javax.swing.JTextField txtPhoneNo;
    private javax.swing.JTextField txtRoomNo;
    private javax.swing.JTextField txtSearchNIC;
    // End of variables declaration//GEN-END:variables
}
